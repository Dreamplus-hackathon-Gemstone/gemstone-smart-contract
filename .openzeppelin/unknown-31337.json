{
  "manifestVersion": "3.2",
  "proxies": [
    {
      "address": "0x9fE46736679d2D9a65F0992F2272dE9f3c7fa6e0",
      "txHash": "0xe2ce15a518693fded31bb5192b017da5a4d6c84f7492a589285105be592fbbdb",
      "kind": "uups"
    },
    {
      "address": "0xCf7Ed3AccA5a467e9e704C703E8D87F634fB0Fc9",
      "txHash": "0xb9a11632418422fa0fccddb051fed0ab48556e803cdf1e77dc6c7dc48ca30016",
      "kind": "uups"
    },
    {
      "address": "0xe7f1725E7734CE288F8367e1Bb143E90bb3F0512",
      "txHash": "0x32b7b63daf9cf341fc92f5ff7fe512e3e8a079f6c7777966fc598c99b903f8b5",
      "kind": "uups"
    }
  ],
  "impls": {
    "4dbb49e40bfa53049ba62443b3f9565145ed7192228072946901f8b703bb5660": {
      "address": "0x5FbDB2315678afecb367f032d93F642f64180aa3",
      "txHash": "0x0d92a7e3e7e4ffedfcd0aa07e2de82142d5785de269bc4e50fb278437adf3ec5",
      "layout": {
        "solcVersion": "0.8.9",
        "storage": [
          {
            "label": "_initialized",
            "offset": 0,
            "slot": "0",
            "type": "t_uint8",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:62",
            "retypedFrom": "bool"
          },
          {
            "label": "_initializing",
            "offset": 1,
            "slot": "0",
            "type": "t_bool",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:67"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "1",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ContextUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:36"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "51",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ERC165Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/utils/introspection/ERC165Upgradeable.sol:41"
          },
          {
            "label": "_balances",
            "offset": 0,
            "slot": "101",
            "type": "t_mapping(t_uint256,t_mapping(t_address,t_uint256))",
            "contract": "ERC1155Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC1155/ERC1155Upgradeable.sol:25"
          },
          {
            "label": "_operatorApprovals",
            "offset": 0,
            "slot": "102",
            "type": "t_mapping(t_address,t_mapping(t_address,t_bool))",
            "contract": "ERC1155Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC1155/ERC1155Upgradeable.sol:28"
          },
          {
            "label": "_uri",
            "offset": 0,
            "slot": "103",
            "type": "t_string_storage",
            "contract": "ERC1155Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC1155/ERC1155Upgradeable.sol:31"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "104",
            "type": "t_array(t_uint256)47_storage",
            "contract": "ERC1155Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC1155/ERC1155Upgradeable.sol:528"
          },
          {
            "label": "_owner",
            "offset": 0,
            "slot": "151",
            "type": "t_address",
            "contract": "OwnableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:22"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "152",
            "type": "t_array(t_uint256)49_storage",
            "contract": "OwnableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:94"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "201",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ERC1155BurnableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC1155/extensions/ERC1155BurnableUpgradeable.sol:52"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "251",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ERC1967UpgradeUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/ERC1967/ERC1967UpgradeUpgradeable.sol:211"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "301",
            "type": "t_array(t_uint256)50_storage",
            "contract": "UUPSUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol:107"
          },
          {
            "label": "_tokenIdCounter",
            "offset": 0,
            "slot": "351",
            "type": "t_struct(Counter)2785_storage",
            "contract": "GemstoneUpgradable",
            "src": "contracts/GemstoneUpgradable.sol:42"
          },
          {
            "label": "FeeRevenues",
            "offset": 0,
            "slot": "352",
            "type": "t_uint256",
            "contract": "GemstoneUpgradable",
            "src": "contracts/GemstoneUpgradable.sol:65"
          },
          {
            "label": "USDc",
            "offset": 0,
            "slot": "353",
            "type": "t_contract(USDC)3134",
            "contract": "GemstoneUpgradable",
            "src": "contracts/GemstoneUpgradable.sol:67"
          },
          {
            "label": "ProposalMapping",
            "offset": 0,
            "slot": "354",
            "type": "t_mapping(t_uint256,t_struct(Proposal)3240_storage)",
            "contract": "GemstoneUpgradable",
            "src": "contracts/GemstoneUpgradable.sol:102"
          },
          {
            "label": "ProposalLockStatus",
            "offset": 0,
            "slot": "355",
            "type": "t_mapping(t_uint256,t_bool)",
            "contract": "GemstoneUpgradable",
            "src": "contracts/GemstoneUpgradable.sol:105"
          },
          {
            "label": "Investors",
            "offset": 0,
            "slot": "356",
            "type": "t_mapping(t_uint256,t_mapping(t_address,t_struct(Miner)3221_storage))",
            "contract": "GemstoneUpgradable",
            "src": "contracts/GemstoneUpgradable.sol:110"
          },
          {
            "label": "AgendaTable",
            "offset": 0,
            "slot": "357",
            "type": "t_mapping(t_uint256,t_struct(Agenda)3247_storage)",
            "contract": "GemstoneUpgradable",
            "src": "contracts/GemstoneUpgradable.sol:114"
          },
          {
            "label": "VoterTable",
            "offset": 0,
            "slot": "358",
            "type": "t_mapping(t_uint256,t_array(t_struct(Voter)3254_storage)dyn_storage)",
            "contract": "GemstoneUpgradable",
            "src": "contracts/GemstoneUpgradable.sol:117"
          },
          {
            "label": "VoterMapping",
            "offset": 0,
            "slot": "359",
            "type": "t_mapping(t_uint256,t_mapping(t_address,t_struct(Voter)3254_storage))",
            "contract": "GemstoneUpgradable",
            "src": "contracts/GemstoneUpgradable.sol:122"
          },
          {
            "label": "URIStorage",
            "offset": 0,
            "slot": "360",
            "type": "t_mapping(t_uint256,t_string_storage)",
            "contract": "GemstoneUpgradable",
            "src": "contracts/GemstoneUpgradable.sol:125"
          }
        ],
        "types": {
          "t_address": {
            "label": "address",
            "numberOfBytes": "20"
          },
          "t_array(t_struct(Agenda)3247_storage)dyn_storage": {
            "label": "struct GemstoneUpgradable.Agenda[]",
            "numberOfBytes": "32"
          },
          "t_array(t_struct(Miner)3221_storage)dyn_storage": {
            "label": "struct GemstoneUpgradable.Miner[]",
            "numberOfBytes": "32"
          },
          "t_array(t_struct(Voter)3254_storage)dyn_storage": {
            "label": "struct GemstoneUpgradable.Voter[]",
            "numberOfBytes": "32"
          },
          "t_array(t_uint256)47_storage": {
            "label": "uint256[47]",
            "numberOfBytes": "1504"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]",
            "numberOfBytes": "1568"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]",
            "numberOfBytes": "1600"
          },
          "t_bool": {
            "label": "bool",
            "numberOfBytes": "1"
          },
          "t_contract(USDC)3134": {
            "label": "contract USDC",
            "numberOfBytes": "20"
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_mapping(t_address,t_bool))": {
            "label": "mapping(address => mapping(address => bool))",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_struct(Miner)3221_storage)": {
            "label": "mapping(address => struct GemstoneUpgradable.Miner)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_struct(Voter)3254_storage)": {
            "label": "mapping(address => struct GemstoneUpgradable.Voter)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_array(t_struct(Voter)3254_storage)dyn_storage)": {
            "label": "mapping(uint256 => struct GemstoneUpgradable.Voter[])",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_bool)": {
            "label": "mapping(uint256 => bool)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_mapping(t_address,t_struct(Miner)3221_storage))": {
            "label": "mapping(uint256 => mapping(address => struct GemstoneUpgradable.Miner))",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_mapping(t_address,t_struct(Voter)3254_storage))": {
            "label": "mapping(uint256 => mapping(address => struct GemstoneUpgradable.Voter))",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_mapping(t_address,t_uint256))": {
            "label": "mapping(uint256 => mapping(address => uint256))",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_string_storage)": {
            "label": "mapping(uint256 => string)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_struct(Agenda)3247_storage)": {
            "label": "mapping(uint256 => struct GemstoneUpgradable.Agenda)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_struct(Proposal)3240_storage)": {
            "label": "mapping(uint256 => struct GemstoneUpgradable.Proposal)",
            "numberOfBytes": "32"
          },
          "t_string_storage": {
            "label": "string",
            "numberOfBytes": "32"
          },
          "t_struct(Agenda)3247_storage": {
            "label": "struct GemstoneUpgradable.Agenda",
            "members": [
              {
                "label": "proposalId",
                "type": "t_uint256",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "agendaId",
                "type": "t_uint256",
                "offset": 0,
                "slot": "1"
              },
              {
                "label": "status",
                "type": "t_bool",
                "offset": 0,
                "slot": "2"
              }
            ],
            "numberOfBytes": "96"
          },
          "t_struct(Counter)2785_storage": {
            "label": "struct Counters.Counter",
            "members": [
              {
                "label": "_value",
                "type": "t_uint256",
                "offset": 0,
                "slot": "0"
              }
            ],
            "numberOfBytes": "32"
          },
          "t_struct(Miner)3221_storage": {
            "label": "struct GemstoneUpgradable.Miner",
            "members": [
              {
                "label": "amount",
                "type": "t_uint256",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "minerAddress",
                "type": "t_address",
                "offset": 0,
                "slot": "1"
              }
            ],
            "numberOfBytes": "64"
          },
          "t_struct(Proposal)3240_storage": {
            "label": "struct GemstoneUpgradable.Proposal",
            "members": [
              {
                "label": "tokenId",
                "type": "t_uint256",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "targetAmount",
                "type": "t_uint256",
                "offset": 0,
                "slot": "1"
              },
              {
                "label": "deadline",
                "type": "t_uint256",
                "offset": 0,
                "slot": "2"
              },
              {
                "label": "currentFunded",
                "type": "t_uint256",
                "offset": 0,
                "slot": "3"
              },
              {
                "label": "makerAddress",
                "type": "t_address",
                "offset": 0,
                "slot": "4"
              },
              {
                "label": "investorList",
                "type": "t_array(t_struct(Miner)3221_storage)dyn_storage",
                "offset": 0,
                "slot": "5"
              },
              {
                "label": "agendaList",
                "type": "t_array(t_struct(Agenda)3247_storage)dyn_storage",
                "offset": 0,
                "slot": "6"
              }
            ],
            "numberOfBytes": "224"
          },
          "t_struct(Voter)3254_storage": {
            "label": "struct GemstoneUpgradable.Voter",
            "members": [
              {
                "label": "weight",
                "type": "t_uint256",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "vote",
                "type": "t_uint256",
                "offset": 0,
                "slot": "1"
              },
              {
                "label": "voted",
                "type": "t_bool",
                "offset": 0,
                "slot": "2"
              }
            ],
            "numberOfBytes": "96"
          },
          "t_uint256": {
            "label": "uint256",
            "numberOfBytes": "32"
          },
          "t_uint8": {
            "label": "uint8",
            "numberOfBytes": "1"
          }
        }
      }
    }
  }
}
